@using MvcPL.Models
@using TypeOfAccount
@model MvcPL.Models.AccountViewModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

<fieldset>
    <legend>Create user</legend>

    <div class="editor-label">
        @Html.LabelFor(model => model.HolderFirstName)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.HolderFirstName)
        @Html.ValidationMessageFor(model => model.HolderFirstName)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.HolderLastName)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.HolderLastName)
        @Html.ValidationMessageFor(model => model.HolderLastName)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.HolderEmail)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.HolderEmail)
        @Html.ValidationMessageFor(model => model.HolderEmail)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.AccountType)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.AccountType,
            new SelectList(Enum.GetNames(typeof(TypeOfBankScore))), string.Empty)
    </div>
    <p>
        <input type="submit" value="Create" />
    </p>
</fieldset>
}

<div>
    @Html.ActionLink("Back to account's list", "Index")
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
